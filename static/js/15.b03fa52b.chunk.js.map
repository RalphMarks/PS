{"version":3,"sources":["containers/UltimateSingle/constants.js","containers/UltimateSingle/actions.js","containers/UltimateSingle/reducer.js","containers/UltimateSingle/selectors.js","containers/UltimateSingle/saga.js","containers/UltimateSingle/index.js","utils/checkStore.js","utils/serverURL.js","utils/reducerInjectors.js","utils/injectReducer.js","components/Navbar/index.js","utils/request.js","utils/constants.js","utils/sagaInjectors.js","utils/injectSaga.js","components/Modal/index.js"],"names":["LOAD_PRODUCT","CHANGE_FORM_STATE","CHANGE_MOD_NAME","CHANGE_MOD_TYPE","SAVE_MOD","ADD_MOD","CHANGE_OPT_NAME","CHANGE_OPT_PRICE","SAVE_OPT","ADD_OPT","addModifierToProduct","product","type","addOptToModifier","initialState","name","modifiers","is_vsbl_crt_mod","is_vsbl_crt_opt","mod_name","mod_type","mod_to_add_opt","opt_name","opt_price","ultimateSReducer","state","action","produce","draft","form","new_state","opts","price","selectUltimate","ultimate","makeSelectProduct","createSelector","ultimateState","makeSelectModifier","is_assigned","order","options","makeSelectOption","makeSelectChosenModifier","sagaSaveModifier","sagaSaveOpt","sagaListener","select","modifier","requestURL","getServerUrl","_id","token","localStorage","getItem","concat","call","request","body","JSON","stringify","headers","method","authResponse","console","log","put","opt","chosenModifier","find","mod","modifierIndex","findIndex","push","takeLatest","key","Modifier","onChangeFormState","className","style","width","margin","class","formatType","map","height","padding","float","fontSize","position","bottom","onClick","CreateModifier","new_modifier","onChangeMod","onSaveMod","id","data-dismiss","aria-label","aria-hidden","for","placeholder","value","onChange","evt","target","CreateOpt","new_option","onChangeOption","onSaveOpt","UltimateSingle","children","children2","match","form_status","chosen_modifier","onLoadProduct","useInjectReducer","reducer","useInjectSaga","saga","useEffect","params","productId","axios","get","then","data","err","Navbar","is_active","Modal","is_visible","marginTop","display","flexWrap","justifyContent","mapStateToProps","createStructuredSelector","mapDispatchToProps","dispatch","loadProduct","changeFormState","property","changeMod","changeOpt","withConnect","connect","compose","memo","checkStore","store","injectReducerFactory","isValid","invariant","isString","isEmpty","isFunction","Reflect","has","injectedReducers","replaceReducer","createReducer","getInjectors","injectReducer","context","React","useContext","ReactReduxContext","props","is_loggedIn","this","to","href","data-toggle","data-target","aria-controls","aria-expanded","cursor","removeItem","setState","Component","parseJSON","response","status","json","checkStatus","error","Error","statusText","url","fetch","DAEMON","ONCE_TILL_UNMOUNT","checkKey","injectSagaFactory","descriptor","args","newDescriptor","mode","hasSaga","injectedSagas","task","runSaga","ejectSagaFactory","cancel","injectSaga","ejectSaga","injectors","ReactDOM","createPortal","tabindex","role","aria-labelledby","aria-modal","opacity","backgroundColor","document"],"mappings":"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","file":"static/js/15.b03fa52b.chunk.js","sourcesContent":["/*\n * ProductsConstants\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * constants here. We prefix them with 'yourproject/YourComponent' so we avoid\n * reducers accidentally picking up actions they shouldn't.\n *\n * Follow this format:\n * export const YOUR_ACTION_CONSTANT = 'yourproject/YourContainer/YOUR_ACTION_CONSTANT';\n */\n\nexport const LOAD_PRODUCT = 'ps/UltimatePage/LOAD_PRODUCT';\nexport const CHANGE_FORM_STATE = 'ps/UltimatePage/CHANGE_FORM_STATE';\nexport const CHANGE_MOD_NAME = 'ps/UltimatePage/CHANGE_MOD_NAME';\nexport const CHANGE_MOD_TYPE = 'ps/UltimatePage/CHANGE_MOD_TYPE';\nexport const SAVE_MOD = 'ps/UltimatePage/SAVE_MOD';\nexport const ADD_MOD = 'ps/UltimatePage/ADD_MOD';\nexport const CHANGE_OPT_NAME = 'ps/UltimatePage/CHANGE_OPT_NAME';\nexport const CHANGE_OPT_PRICE = 'ps/UltimatePage/CHANGE_OPT_PRICE';\nexport const SAVE_OPT = 'ps/UltimatePage/SAVE_OPT';\nexport const ADD_OPT = 'ps/UltimatePage/ADD_OPT';","import { \n  LOAD_PRODUCT,\n  CHANGE_FORM_STATE,\n  CHANGE_MOD_NAME,\n  CHANGE_MOD_TYPE,\n  SAVE_MOD,\n  ADD_MOD,\n  CHANGE_OPT_NAME,\n  CHANGE_OPT_PRICE,\n  SAVE_OPT,\n  ADD_OPT,\n } from './constants';\n\n /**\n * Changes the input field of the form\n * @param  {object} product product to be loaded\n * @return {object} An action object with a type of CHANGE_USERNAME\n */\nexport function loadProduct(product) {\n  return {\n    type: LOAD_PRODUCT,\n    product,\n  };\n}\n\n/**\n * \n * @param {string} form Nombre del form para ser actualizado  \n * @param {boolean} state  form's visibility\n * @return {object} An action object with a type of MAKE_FORM_VISIBLE\n */\nexport function changeFormState(form, new_state, opts){\n  return{\n    type: CHANGE_FORM_STATE,\n    form,\n    new_state,\n    opts\n  };\n}\n\n/**\n * \n * @param {string} property product property to be change\n * * @param {string} value value to be change\n * @return {object} An action object with a type of CHANGE_PRODUCT_NAME or CHANGE_PRODUCT_PRICE\n */\nexport function changeMod(property, value){\n  switch (property) {\n    case \"name\":\n      return { type: CHANGE_MOD_NAME, name: value};\n    case \"type\":\n      return { type: CHANGE_MOD_TYPE, mod_type: value};\n  }\n}\n\n/**\n * \n * @param {string} property product property to be change\n * * @param {string} value value to be change\n * @return {object} An action object with a type of CHANGE_OPT_NAME or CHANGE_OPT_PRICE\n */\nexport function changeOpt(property, value){\n  switch (property) {\n    case \"name\":\n      return { type: CHANGE_OPT_NAME, name: value};\n    case \"price\":\n      return { type: CHANGE_OPT_PRICE, price: value};\n  }\n}\n\n\n/**\n * \n * @param {string} form Nombre del form para ser actualizado  \n * @param {boolean} state  form's visibility\n * @return {object} An action object with a type of MAKE_FORM_VISIBLE\n */\nexport function saveMod(){\n  return { type: SAVE_MOD };\n}\n\n/**\n * \n * @param {object} product Instancia de producto\n * @return {object} An action object with a type of CREATE_PRODUCT\n */\nexport function addModifierToProduct(product) {\n  return {\n    type: ADD_MOD,\n    product,\n  };\n}\n\n/**\n * @return {object} An action object with a type of SAVE_OPT\n */\nexport function saveOpt() {\n  return {\n    type: SAVE_OPT,\n  };\n}\n\n/**\n * \n * @param {object} product Instancia de producto\n * @return {object} An action object with a type of ADD_OPT\n */\nexport function addOptToModifier(product) {\n  return {\n    type: ADD_OPT,\n    product,\n  };\n}","/*\n * ProductReducer\n *\n * The reducer takes care of our data. Using actions, we can\n * update our application state. To add a new action,\n * add it to the switch statement in the reducer function\n *\n */\n\nimport produce from 'immer';\nimport { \n  LOAD_PRODUCT,\n  CHANGE_FORM_STATE,\n  CHANGE_MOD_NAME,\n  CHANGE_MOD_TYPE,\n  SAVE_MOD,\n  ADD_MOD,\n  CHANGE_OPT_NAME,\n  CHANGE_OPT_PRICE,\n  SAVE_OPT,\n  ADD_OPT,\n} from './constants';\nimport { da } from 'date-fns/esm/locale';\n\n// The initial state of the App\nexport const initialState = {\n  product: {\n    name: \"\",\n    modifiers:[],\n  },\n  is_vsbl_crt_mod: false,\n  is_vsbl_crt_opt: false,\n  mod_name: \"\",\n  mod_type: \"\",\n  mod_to_add_opt: \"\",\n  opt_name:\"\",\n  opt_price:\"\",\n};\n\n/* eslint-disable default-case, no-param-reassign */\nconst ultimateSReducer = (state = initialState, action) =>\n  produce(state, draft => {\n    switch (action.type) {\n\n      case LOAD_PRODUCT:\n        draft.product = action.product;\n        break;\n\n      case CHANGE_MOD_NAME:\n        draft.mod_name = action.name;\n        break;\n      case CHANGE_MOD_TYPE:\n        draft.mod_type = action.mod_type;\n        break;\n\n      case SAVE_MOD:\n        break;\n      case ADD_MOD:\n        draft.product= action.product;\n        draft.is_vsbl_crt_mod = false;\n        draft.mod_name = \"\";\n        draft.mod_type = \"\";\n        break;\n\n      case CHANGE_FORM_STATE:\n          switch (action.form) {\n            case \"crt_mod\":            \n              draft.is_vsbl_crt_mod = action.new_state;\n              break;\n            case \"crt_opt\":\n              draft.is_vsbl_crt_opt = action.new_state;\n              draft.mod_to_add_opt = action.opts;\n              break;\n          }\n          break;\n\n      case CHANGE_OPT_NAME:\n        draft.opt_name = action.name;\n        break;\n      case CHANGE_OPT_PRICE:\n        draft.opt_price = action.price;\n        break;\n      case SAVE_OPT:\n        break;\n      case ADD_OPT:\n        draft.product= action.product;\n        draft.is_vsbl_crt_opt = false;\n        draft.opt_name = \"\";\n        draft.opt_price = \"\";\n        break;\n  }\n  });\n\nexport default ultimateSReducer;","/**\n * ProductPage selectors\n */\n\nimport { createSelector } from 'reselect';\nimport { initialState } from './reducer';\n\nconst selectUltimate = state => state.ultimate || initialState;\n\nconst makeSelectProduct = () =>\n  createSelector(\n    selectUltimate,\n    ultimateState => ultimateState.product,\n  );\n\nconst makeSelectModifier = () =>\n  createSelector(\n    selectUltimate,\n    ultimateState => {\n      return({\n        name: ultimateState.mod_name,\n        type: ultimateState.mod_type,\n        is_assigned: false,\n        order: -1,\n        options: [],\n      });\n    },\n  );\n\nconst makeSelectOption = () =>\n  createSelector(\n    selectUltimate,\n    ultimateState => {\n      return({\n        name: ultimateState.opt_name,\n        price: ultimateState.opt_price,\n      });\n    },\n  );\n\nconst makeSelectFormStatus = () =>\n  createSelector(\n    selectUltimate,\n    ultimateState => {\n      return({\n        is_vsbl_crt_mod: ultimateState.is_vsbl_crt_mod,\n        is_vsbl_crt_opt: ultimateState.is_vsbl_crt_opt,\n      });\n    },\n  );\n\nconst makeSelectChosenModifier = () =>\n  createSelector(\n    selectUltimate,\n    ultimateState => ultimateState.mod_to_add_opt,\n  );\n\nexport { makeSelectProduct, makeSelectFormStatus, makeSelectModifier, makeSelectChosenModifier, makeSelectOption };","import { getServerUrl } from './../../utils/serverURL';\nimport { call, put, select, takeLatest } from 'redux-saga/effects';\nimport { SAVE_MOD, SAVE_OPT } from './constants';\nimport { makeSelectModifier, makeSelectProduct, makeSelectOption, makeSelectChosenModifier } from './selectors';\nimport { createProduct, addModifierToProduct, addOptToModifier} from './actions';\nimport request from './../../utils/request';\nimport produce from 'immer';\n\nexport function* sagaSaveModifier() {\n  // Select username from store\n  const modifier = yield select(makeSelectModifier());\n  const product = yield select(makeSelectProduct());\n  const requestURL = `${getServerUrl()}/products/${product._id}`;\n\n  try {\n\n    const token = localStorage.getItem(\"PointOfSaleToken\")\n    product.modifiers = product.modifiers.concat([modifier]);\n    const authResponse = yield call(request, requestURL, {\n      body: JSON.stringify(product),\n      headers: {'Content-Type': 'application/json', 'Authorization': `Bearer ${token}`},\n      method: 'PATCH'\n    });\n\n    console.log(\"saga\")\n    console.log(authResponse)\n\n  yield put(addModifierToProduct(authResponse)); \n    \n  } catch (err) {\n    console.log(\"err\")\n    console.log(err)\n  }\n}\n\nexport function* sagaSaveOpt() {\n  // Select username from store\n  const opt = yield select(makeSelectOption());\n  const chosenModifier = yield select(makeSelectChosenModifier());\n  const product = yield select(makeSelectProduct());\n  const requestURL = `${getServerUrl()}/products/${product._id}`;\n\n  try {\n\n    const token = localStorage.getItem(\"PointOfSaleToken\");\n    let modifier = product.modifiers.find(mod => mod.name === chosenModifier);\n    let modifierIndex = product.modifiers.findIndex(mod => mod.name === chosenModifier);\n    modifier.options.push(opt);\n    product.modifiers[modifierIndex] = modifier;\n\n    const authResponse = yield call(request, requestURL, {\n      body: JSON.stringify(product),\n      headers: {'Content-Type': 'application/json', 'Authorization': `Bearer ${token}`},\n      method: 'PATCH'\n    });\n\n    console.log(\"saga\")\n    console.log(authResponse)\n\n  yield put(addOptToModifier(authResponse)); \n    \n  } catch (err) {\n    console.log(\"err\")\n    console.log(err)\n  }\n}\n\n/**\n * Root saga manages watcher lifecycle\n */\nexport default function* sagaListener() {\n  yield takeLatest(SAVE_MOD, sagaSaveModifier);\n  yield takeLatest(SAVE_OPT, sagaSaveOpt);\n}","import React, {useEffect, memo} from 'react';\nimport axios from 'axios';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getServerUrl } from './../../utils/serverURL';\nimport { createStructuredSelector } from 'reselect';\nimport { useInjectReducer } from './../../utils/injectReducer';\nimport { useInjectSaga } from './../../utils/injectSaga';\nimport Navbar from '../../components/Navbar';\nimport Modal from '../../components/Modal';\n\nimport { \n  loadProduct, \n  changeFormState, \n  changeMod, \n  saveMod, \n  changeOpt,\n  saveOpt\n} from './actions';\nimport { \n  makeSelectProduct, \n  makeSelectFormStatus, \n  makeSelectModifier, \n  makeSelectChosenModifier, \n  makeSelectOption,\n} from './selectors';\nimport reducer from './reducer';\nimport saga from './saga';\nconst key = 'ultimate';\n\n\nconst Modifier = ({modifier,onChangeFormState}) => {\n\n  const formatType = (type) => {\n    switch (type) {\n      case \"0\":\n        return \"Opcional\"\n      case \"1\":\n        return \"Obligatorio\"\n      case \"2\":\n        return \"Seleccion multiple\"\n      default:\n        break;\n    }\n  };\n\n\n  return(\n    <div className=\"card\" style={{width: '240px', margin:'8px'}}>\n      <div class=\"modal-header\">\n        <span>{modifier.name}</span>\n        <span>{formatType(modifier.type)}</span>\n      </div>\n      <div className=\"card-body\">\n        {modifier.options.map(opt => {\n          return(\n            <span class=\"badge badge-info\" style={{width:\"100%\", height:\"32px\", padding:\"8px\"}}>\n              <span style={{float:\"left\", fontSize:\"16px\"}}>{opt.name}</span>\n              <span style={{float:\"right\", fontSize:\"16px\"}}>{opt.price}</span>\n            </span>\n          );\n        })}\n      </div>\n      <div \n      className=\"btn btn-dark\" \n      style={{position:\"relative\", width:\"88%\", bottom:\"10px\", margin:\"auto\"}}\n      onClick={() => onChangeFormState(\"crt_opt\", true, modifier.name)}>\n        +\n      </div>\n    </div>\n  );\n}\n\nconst CreateModifier = ({new_modifier, onChangeFormState, onChangeMod, onSaveMod}) => {\n  return(\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLiveLabel\">Crear Modificador</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => onChangeFormState(\"crt_mod\", false)}>\n          <span aria-hidden=\"true\">×</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Nombre del Bloque</label>\n          <input \n            type=\"text\" \n            class=\"form-control\" \n            placeholder=\"Nombre del Bloque\"\n            value={new_modifier.name}\n            onChange={(evt) => onChangeMod(\"name\", evt.target.value)}/>\n        </div>\n        <div class=\"form-group\">\n          <label>Tipo</label>\n          <select class=\"custom-select\" value={new_modifier.type} onChange={(evt) => onChangeMod(\"type\", evt.target.value)}>\n            <option value=\"\">Tipos de Modificador</option>\n            <option value=\"0\">Opcional</option>\n            <option value=\"1\">Obligatorio</option>\n            <option value=\"2\">Seleccion Multiple</option>\n          </select>\n        </div>\n        <div \n          className=\"btn btn-dark\" \n          onClick={onSaveMod}>\n          Crear Bloque\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst CreateOpt = ({new_option, onChangeFormState, onChangeOption, onSaveOpt}) => {\n  return(\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLiveLabel\">Crear Opcion</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => onChangeFormState(\"crt_opt\", false)}>\n          <span aria-hidden=\"true\">×</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Nombre de la opcion</label>\n          <input \n            type=\"text\" \n            class=\"form-control\" \n            placeholder=\"Nombre de la opcion\"\n            value={new_option.name}\n            onChange={(evt) => onChangeOption(\"name\", evt.target.value)}/>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Precio</label>\n          <input \n            type=\"text\" \n            class=\"form-control\" \n            placeholder=\"Precio\"\n            value={new_option.price}\n            onChange={(evt) => onChangeOption(\"price\", evt.target.value)}/>\n        </div>\n        <div className=\"btn btn-dark\" onClick={onSaveOpt}>\n          Crear Opcion\n        </div>  \n      </div>\n\n\n      </div> \n  );\n}\n\nexport function UltimateSingle({\n  product,\n  new_modifier, \n  match, \n  form_status, \n  chosen_modifier,\n  new_option,\n  onChangeFormState, \n  onChangeMod,\n  onLoadProduct,\n  onSaveMod,\n  onChangeOption,\n  onSaveOpt,\n}) {\n\n  let children;\n  let children2;\n  useInjectReducer({ key, reducer });\n  useInjectSaga({ key, saga });\n\n  useEffect(() => {\n\n    const requestURL = `${getServerUrl()}/products/${match.params.productId}`;\n    try {\n      const token = localStorage.getItem(\"PointOfSaleToken\")\n\n      axios.get(requestURL, {\n        headers: {'Authorization': `Bearer ${token}`}\n      })\n      .then(({ data }) => {\n        console.log(data);\n        onLoadProduct(data);\n      });\n\n    } catch (err) {\n      console.log(\"err\")\n      console.log(err)\n    }\n\n  }, []);\n\n  children =(\n    <CreateModifier \n      new_modifier={new_modifier} \n      onChangeFormState={onChangeFormState} \n      onChangeMod={onChangeMod} \n      onSaveMod={onSaveMod}/>\n  );\n\n  children2 =(\n    <CreateOpt \n      new_option={new_option}\n      onChangeFormState={onChangeFormState}  \n      onChangeOption={onChangeOption}\n      onSaveOpt={onSaveOpt}/>\n  );\n\n\n  return (\n    <div className=\"container-fluid\" style={{padding: '0px'}}>\n      <Navbar is_active='product' />\n      <Modal is_visible={form_status.is_vsbl_crt_mod} children={children} />\n      <Modal is_visible={form_status.is_vsbl_crt_opt} children={children2} />\n      <div className=\"row justify-content-center\">\n        <div className=\"col-6\">\n          <h1>Producto: {product.name}</h1>\n        </div>\n        <div className=\"col-6\">\n          <div className=\"btn btn-dark\" style={{marginTop: \"12px\"}} onClick={() => onChangeFormState(\"crt_mod\", true)}>Crear Bloque</div>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-12\" style={{display:'flex', flexWrap:'wrap', justifyContent:'center'}}>\n          {product.modifiers.map(mod => \n            <div>\n              <Modifier modifier={mod} onChangeFormState={onChangeFormState} />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nUltimateSingle.propTypes = {\n};\n\nconst mapStateToProps = createStructuredSelector({\n  product: makeSelectProduct(),\n  form_status: makeSelectFormStatus(),\n  new_modifier: makeSelectModifier(),\n  chosen_modifier: makeSelectChosenModifier(),\n  new_option: makeSelectOption(),\n});\n\nexport function mapDispatchToProps(dispatch) {\n  return {\n    onLoadProduct: (product) => dispatch(loadProduct(product)),\n    onChangeFormState: (form, new_state, opt) => {dispatch(changeFormState(form, new_state, opt)); console.log(\"change\")},\n    onChangeMod: (property, value) => dispatch(changeMod(property, value)),\n    onSaveMod: () => dispatch(saveMod()),\n    onChangeOption: (property, value) => dispatch(changeOpt(property, value)),\n    onSaveOpt: () => dispatch(saveOpt()),\n  };\n}\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n);\n\n\nexport default compose(\n  withConnect,\n  memo,\n)(UltimateSingle);\n\n","/**\n * Validate the shape of redux store\n */\nexport default function checkStore(store) {\n  return true;\n}","const getServerUrl = () => {\n  return \"https://2c5046b9.ngrok.io\";\n}\n\nexport { getServerUrl };","import invariant from 'invariant';\nimport { isEmpty, isFunction, isString } from 'lodash';\n\nimport checkStore from './checkStore';\nimport createReducer from './../reducers';\n\nexport function injectReducerFactory(store, isValid) {\n  return function injectReducer(key, reducer) {\n    if (!isValid) checkStore(store);\n\n    invariant(\n      isString(key) && !isEmpty(key) && isFunction(reducer),\n      '(src/utils...) injectReducer: Expected `reducer` to be a reducer function',\n    );\n\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n    if (\n      Reflect.has(store.injectedReducers, key) &&\n      store.injectedReducers[key] === reducer\n    )\n      return;\n\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\n    store.replaceReducer(createReducer(store.injectedReducers));\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectReducer: injectReducerFactory(store, true),\n  };\n}","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ReactReduxContext } from 'react-redux';\n\nimport getInjectors from './reducerInjectors';\n\n/**\n * Dynamically injects a reducer\n *\n * @param {string} key A key of the reducer\n * @param {function} reducer A reducer that will be injected\n *\n */\nexport default ({ key, reducer }) => WrappedComponent => {\n  class ReducerInjector extends React.Component {\n    static WrappedComponent = WrappedComponent;\n\n    static contextType = ReactReduxContext;\n\n    static displayName = `withReducer(${WrappedComponent.displayName ||\n      WrappedComponent.name ||\n      'Component'})`;\n\n    constructor(props, context) {\n      super(props, context);\n\n      getInjectors(context.store).injectReducer(key, reducer);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\n};\n\nconst useInjectReducer = ({ key, reducer }) => {\n  const context = React.useContext(ReactReduxContext);\n  React.useEffect(() => {\n    getInjectors(context.store).injectReducer(key, reducer);\n  }, []);\n};\n\nexport { useInjectReducer };","import React from 'react'\nimport { Redirect } from 'react-router';\nimport { Link } from \"react-router-dom\";\n\n\nclass Navbar extends React.Component {\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      is_loggedIn: true,\n    }\n  }\n  \n\n  render(){\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        {this.state.is_loggedIn ? null : <Redirect to=\"/PS/login\" /> }\n        <a className=\"navbar-brand\" href=\"#\">PS</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className={(this.props.is_active === 'dashboard') ? 'nav-item active' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/PS/dashboard\">Dashboard</a>\n            </li>\n            <li className={(this.props.is_active === 'employees') ? 'nav-item active' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/PS/employees\">Employees</a>\n            </li>\n            <li className={(this.props.is_active === 'product') ? 'nav-item active' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/PS/ultimate\">Products</a>\n            </li>\n            <li className={(this.props.is_active === 'analytics') ? 'nav-item active' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/PS/analytics\">Analytics</a>\n            </li>\n            <li className={(this.props.is_active === 'flow') ? 'nav-item active' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/PS/flow\">Flujo</a>\n            </li>\n            <li className={(this.props.is_active === 'cash') ? 'nav-item active' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/PS/cash\">Caja</a>\n            </li>\n          </ul>\n          <span className=\"navbar-text\" style={{cursor: \"pointer\"}} onClick={() => {\n            localStorage.removeItem(\"PointOfSaleToken\");\n           this.setState({is_loggedIn: false});\n          }}>\n            Cerrar Sesión\n          </span>\n        </div>\n      </nav>\n    )\n  }\n\n}\n\nexport default Navbar;\n\n","/**\n * Parses the JSON returned by a network request\n *\n * @param  {object} response A response from a network request\n *\n * @return {object}          The parsed JSON from the request\n */\nfunction parseJSON(response) {\n  if (response.status === 204 || response.status === 205) {\n    return null;\n  }\n  return response.json();\n}\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n *\n * @return {object}           The response data\n */\nexport default function request(url, options) {\n  return fetch(url, options)\n    .then(checkStatus)\n    .then(parseJSON);\n}","export const RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';\nexport const DAEMON = '@@saga-injector/daemon';\nexport const ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';","import invariant from 'invariant';\nimport { isEmpty, isFunction, isString, conformsTo } from 'lodash';\n\nimport checkStore from './checkStore';\nimport { DAEMON, ONCE_TILL_UNMOUNT, RESTART_ON_REMOUNT } from './constants';\n\nconst allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\n\nconst checkKey = key =>\n  invariant(\n    isString(key) && !isEmpty(key),\n    '(app/utils...) injectSaga: Expected `key` to be a non empty string',\n  );\n\nconst checkDescriptor = descriptor => {\n  const shape = {\n    saga: isFunction,\n    mode: mode => isString(mode) && allowedModes.includes(mode),\n  };\n  invariant(\n    conformsTo(descriptor, shape),\n    '(src/utils...) injectSaga: Expected a valid saga descriptor',\n  );\n};\n\nexport function injectSagaFactory(store, isValid) {\n  return function injectSaga(key, descriptor = {}, args) {\n    if (!isValid) checkStore(store);\n\n    const newDescriptor = {\n      ...descriptor,\n      mode: descriptor.mode || DAEMON,\n    };\n    const { saga, mode } = newDescriptor;\n\n    checkKey(key);\n    //checkDescriptor(newDescriptor);\n\n    let hasSaga = Reflect.has(store.injectedSagas, key);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const oldDescriptor = store.injectedSagas[key];\n      // enable hot reloading of daemon and once-till-unmount sagas\n      if (hasSaga && oldDescriptor.saga !== saga) {\n        oldDescriptor.task.cancel();\n        hasSaga = false;\n      }\n    }\n\n    if (\n      !hasSaga ||\n      (hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT)\n    ) {\n      /* eslint-disable no-param-reassign */\n      store.injectedSagas[key] = {\n        ...newDescriptor,\n        task: store.runSaga(saga, args),\n      };\n      /* eslint-enable no-param-reassign */\n    }\n  };\n}\n\nexport function ejectSagaFactory(store, isValid) {\n  return function ejectSaga(key) {\n    if (!isValid) checkStore(store);\n\n    checkKey(key);\n\n    if (Reflect.has(store.injectedSagas, key)) {\n      const descriptor = store.injectedSagas[key];\n      if (descriptor.mode && descriptor.mode !== DAEMON) {\n        descriptor.task.cancel();\n        // Clean up in production; in development we need `descriptor.saga` for hot reloading\n        if (process.env.NODE_ENV === 'production') {\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\n          store.injectedSagas[key] = 'done'; // eslint-disable-line no-param-reassign\n        }\n      }\n    }\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectSaga: injectSagaFactory(store, true),\n    ejectSaga: ejectSagaFactory(store, true),\n  };\n}\n","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ReactReduxContext } from 'react-redux';\n\nimport getInjectors from './sagaInjectors';\n\n/**\n * Dynamically injects a saga, passes component's props as saga arguments\n *\n * @param {string} key A key of the saga\n * @param {function} saga A root saga that will be injected\n * @param {string} [mode] By default (constants.DAEMON) the saga will be started\n * on component mount and never canceled or started again. Another two options:\n *   - constants.RESTART_ON_REMOUNT — the saga will be started on component mount and\n *   cancelled with `task.cancel()` on component unmount for improved performance,\n *   - constants.ONCE_TILL_UNMOUNT — behaves like 'RESTART_ON_REMOUNT' but never runs it again.\n *\n */\nexport default ({ key, saga, mode }) => WrappedComponent => {\n  class InjectSaga extends React.Component {\n    static WrappedComponent = WrappedComponent;\n\n    static contextType = ReactReduxContext;\n\n    static displayName = `withSaga(${WrappedComponent.displayName ||\n      WrappedComponent.name ||\n      'Component'})`;\n\n    constructor(props, context) {\n      super(props, context);\n\n      this.injectors = getInjectors(context.store);\n\n      this.injectors.injectSaga(key, { saga, mode }, this.props);\n    }\n\n    componentWillUnmount() {\n      this.injectors.ejectSaga(key);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return hoistNonReactStatics(InjectSaga, WrappedComponent);\n};\n\nconst useInjectSaga = ({ key, saga, mode }) => {\n  const context = React.useContext(ReactReduxContext);\n  React.useEffect(() => {\n    const injectors = getInjectors(context.store);\n    injectors.injectSaga(key, { saga, mode });\n\n    return () => {\n      injectors.ejectSaga(key);\n    };\n  }, []);\n};\n\nexport { useInjectSaga };","import React from 'react'\nimport ReactDOM from 'react-dom';\nfunction Modal({is_visible, children}) {\n  return ReactDOM.createPortal(\n    <div class=\"modal show fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLiveLabel\" aria-modal=\"true\" style={{display: is_visible ? \"block\" : \"none\", opacity:is_visible ? 1 : 0, backgroundColor:\"rgba(0,0,0,0.5)\"}}>\n      <div class=\"modal-dialog\" role=\"document\">\n        {children}\n      </div>\n    </div>,\n    document.body\n  );\n}\n\nexport default Modal;\n"],"sourceRoot":""}