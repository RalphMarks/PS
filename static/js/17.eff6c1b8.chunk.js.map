{"version":3,"sources":["containers/ProductPage/constants.js","containers/ProductPage/actions.js","containers/ProductPage/reducer.js","containers/ProductPage/selectors.js","containers/ProductPage/saga.js","containers/ProductPage/index.js","utils/checkStore.js","utils/serverURL.js","utils/reducerInjectors.js","utils/injectReducer.js","components/Navbar/index.js","utils/request.js","utils/constants.js","utils/sagaInjectors.js","utils/injectSaga.js"],"names":["LOAD_PRODUCTS","SAVE_PRODUCT","CREATE_PRODUCT","CREATE_MODIFIER","MAKE_FORM_VISIBLE","CHANGE_PRODUCT_NAME","CHANGE_PRODUCT_PRICE","CHANGE_PRODUCT_SELECT","CHANGE_MOD_NAME","CHANGE_MOD_PRICE","CHANGE_MOD_TYPE","CHANGE_CAT_NAME","CHANGE_CAT_TYPE","SAVE_CATEGORY","ADD_MODIFIER","MAKE_MOD_FORM_VISIBLE","createProduct","product","type","addModifierToProduct","initialState","products","isCreatePrdFormVisible","isCreateModFormVisible","isCreateCatFormVisible","isCreateModBtnVisible","productName","productPrice","selectedProduct","modName","modPrice","catName","catType","productToAddMod","loginReducer","state","action","produce","draft","name","price","select","modType","concat","p","pIndex","findIndex","modifiers","modifier","form","visibility","productIndex","_id","productId","selectProducts","makeSelectNewCategory","createSelector","productsState","makeSelectSelectedProduct","find","makeSelectNewProduct","sagaSaveProduct","sagaSaveCategory","sagaListener","requestURL","getServerUrl","token","localStorage","getItem","call","request","body","JSON","stringify","headers","method","put","console","log","category","authResponse","takeLatest","key","Product","makeFormVisible","className","style","width","margin","display","formatType","options","map","option","marginTop","onClick","ProductList","onChangePrdct","class","padding","onChange","evt","target","value","selected","CreateProduct","onSaveProduct","textAlign","position","top","right","cursor","aria-hidden","for","placeholder","CreateModifier","onChangeMod","newMod","CreateModifierButton","CreateCategory","newCat","onChangeCat","onSaveCategory","ProductPage","formStatus","newProduct","onLoadProducts","useInjectReducer","reducer","useInjectSaga","saga","useEffect","axios","get","then","data","err","Navbar","is_active","isVisibleCreateModBtn","isVisibleCreateProd","isVisibleCreateMod","isVisibleCreateCat","mapStateToProps","createStructuredSelector","mapDispatchToProps","dispatch","loadProducts","property","changeProduct","changeMod","changeCategory","withConnect","connect","compose","memo","checkStore","store","injectReducerFactory","isValid","invariant","isString","isEmpty","isFunction","Reflect","has","injectedReducers","replaceReducer","createReducer","getInjectors","injectReducer","context","React","useContext","ReactReduxContext","props","is_loggedIn","this","to","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","removeItem","setState","Component","parseJSON","response","status","json","checkStatus","error","Error","statusText","url","fetch","DAEMON","ONCE_TILL_UNMOUNT","checkKey","injectSagaFactory","descriptor","args","newDescriptor","mode","hasSaga","injectedSagas","task","runSaga","ejectSagaFactory","cancel","injectSaga","ejectSaga","injectors"],"mappings":"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","file":"static/js/17.eff6c1b8.chunk.js","sourcesContent":["/*\n * ProductsConstants\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * constants here. We prefix them with 'yourproject/YourComponent' so we avoid\n * reducers accidentally picking up actions they shouldn't.\n *\n * Follow this format:\n * export const YOUR_ACTION_CONSTANT = 'yourproject/YourContainer/YOUR_ACTION_CONSTANT';\n */\n\nexport const LOAD_PRODUCTS = 'ps/ProductsPage/LOAD_PRODUCTS';\nexport const SAVE_PRODUCT = 'ps/ProductsPage/SAVE_PRODUCT';\nexport const CREATE_PRODUCT = 'ps/ProductsPage/CREATE_PRODUCT';\nexport const CREATE_MODIFIER = 'ps/ProductsPage/CREATE_MODIFIER';\nexport const MAKE_FORM_VISIBLE = 'ps/ProductsPage/MAKE_FORM_VISIBLE';\nexport const CHANGE_PRODUCT_NAME = 'ps/ProductsPage/CHANGE_PRODUCT_NAME';\nexport const CHANGE_PRODUCT_PRICE = 'ps/ProductsPage/CHANGE_PRODUCT_PRICE';\nexport const CHANGE_PRODUCT_SELECT = 'ps/ProductsPage/CHANGE_PRODUCT_SELECT';\nexport const CHANGE_MOD_NAME = 'ps/ProductsPage/CHANGE_MOD_NAME';\nexport const CHANGE_MOD_PRICE = 'ps/ProductsPage/CHANGE_MOD_PRICE';\nexport const CHANGE_MOD_TYPE = 'ps/ProductsPage/CHANGE_MOD_TYPE';\nexport const CHANGE_CAT_NAME = 'ps/ProductsPage/CHANGE_CAT_NAME';\nexport const CHANGE_CAT_TYPE = 'ps/ProductsPage/CHANGE_CAT_TYPE';\nexport const SAVE_CATEGORY = 'ps/ProductsPage/SAVE_CATEGORY';\nexport const ADD_MODIFIER = 'ps/ProductsPage/ADD_MODIFIER';\nexport const MAKE_MOD_FORM_VISIBLE = 'ps/ProductsPage/MAKE_MOD_FORM_VISIBLE';","/*\n * Product Actions\n *\n * Actions change things in your application\n * Since this boilerplate uses a uni-directional data flow, specifically redux,\n * we have these actions which are the only way your application interacts with\n * your application state. This guarantees that your state is up to date and nobody\n * messes it up weirdly somewhere.\n *\n * To add a new Action:\n * 1) Import your constant\n * 2) Add a function like this:\n *    export function yourAction(var) {\n *        return { type: YOUR_ACTION_CONSTANT, var: var }\n *    }\n */\n\nimport { \n  CREATE_MODIFIER, \n  CREATE_PRODUCT, \n  SAVE_PRODUCT,\n  LOAD_PRODUCTS, \n  MAKE_FORM_VISIBLE,\n  CHANGE_PRODUCT_NAME,\n  CHANGE_PRODUCT_PRICE,\n  CHANGE_PRODUCT_SELECT,\n  CHANGE_MOD_NAME,\n  CHANGE_MOD_PRICE,\n  CHANGE_MOD_TYPE,\n  CHANGE_CAT_NAME,\n  CHANGE_CAT_TYPE,\n  SAVE_CATEGORY,\n  ADD_MODIFIER,\n  MAKE_MOD_FORM_VISIBLE,\n } from './constants';\n\n/**\n * Changes the input field of the form\n * @param  {array} products La lista de productos\n * @return {object} An action object with a type of CHANGE_USERNAME\n */\nexport function loadProducts(products) {\n  return {\n    type: LOAD_PRODUCTS,\n    products,\n  };\n}\n\nexport function createModifier(modifier) {\n  return {\n    type: CREATE_MODIFIER,\n    modifier,\n  };\n}\n\n\n/**\n * \n * @param {object} product Instancia de producto\n * @return {object} An action object with a type of CREATE_PRODUCT\n */\nexport function createProduct(product) {\n  return {\n    type: CREATE_PRODUCT,\n    product,\n  };\n}\n\n/**\n * \n * @param {object} product Instancia de producto\n * @return {object} An action object with a type of CREATE_PRODUCT\n */\nexport function addModifierToProduct(product) {\n  return {\n    type: ADD_MODIFIER,\n    product,\n  };\n}\n\n/**\n * @return {object} An action object with a type of SAVE_PRODUCT\n */\nexport function saveProduct() {\n  return {\n    type: SAVE_PRODUCT,\n  };\n}\n\n/**\n * \n * @param {string} form Nombre del form para ser actualizado  \n * @param {boolean} visibility Visibilidad del form\n * @return {object} An action object with a type of MAKE_FORM_VISIBLE\n */\nexport function makeFormVisible(form, visibility){\n  return{\n    type: MAKE_FORM_VISIBLE,\n    form,\n    visibility,\n  };\n}\n\n/**\n * \n * @param {string} property product property to be change\n * * @param {string} value value to be change\n * @return {object} An action object with a type of CHANGE_PRODUCT_NAME or CHANGE_PRODUCT_PRICE\n */\nexport function changeProduct(property, value){\n  switch (property) {\n    case \"name\":\n      return { type: CHANGE_PRODUCT_NAME, name: value};\n    case \"price\":\n      return { type: CHANGE_PRODUCT_PRICE, price: value};\n    case \"mod\":\n        return { type: CHANGE_PRODUCT_SELECT, select: value};\n  }\n}\n\n/**\n * \n * @param {string} property product property to be change\n * * @param {string} value value to be change\n * @return {object} An action object with a type of CHANGE_MOD_NAME or CHANGE_MOD_PRICE or CHANGE_MOD_TYPE\n */\nexport function changeMod(property, value){\n  switch (property) {\n    case \"name\":\n      return { type: CHANGE_MOD_NAME, name: value};\n    case \"price\":\n      return { type: CHANGE_MOD_PRICE, price: value};\n    case \"modType\":\n        return { type: CHANGE_MOD_TYPE, modType: value};\n  }\n}\n\n/**\n * \n * @param {string} property product property to be change\n * * @param {string} value value to be change\n * @return {object} An action object with a type of CHANGE_CAT_NAME or CHANGE_CAT_TYPE\n */\nexport function changeCategory(property, value){\n  switch (property) {\n    case \"name\":\n      return { type: CHANGE_CAT_NAME, name: value};\n    case \"type\":\n      return { type: CHANGE_CAT_TYPE, catType: value};\n  }\n}\n\n/**\n * \n * @param {string} property product property to be change\n * * @param {string} value value to be change\n * @return {object} An action object with a type of CHANGE_CAT_NAME\n */\nexport function saveCategory(){\n  return { type: SAVE_CATEGORY};\n}\n\n/**\n * \n * @param {string} productId id of the product to be changed\n * @return {object} An action object with a type of MAKE_MOD_FORM_VISIBLE\n */\nexport function makeModFormVisible(productId){\n  return { type: MAKE_MOD_FORM_VISIBLE, productId: productId};\n}","/*\n * ProductReducer\n *\n * The reducer takes care of our data. Using actions, we can\n * update our application state. To add a new action,\n * add it to the switch statement in the reducer function\n *\n */\n\nimport produce from 'immer';\nimport { \n  CREATE_MODIFIER, \n  CREATE_PRODUCT, \n  SAVE_PRODUCT,\n  LOAD_PRODUCTS, \n  MAKE_FORM_VISIBLE,\n  CHANGE_PRODUCT_NAME,\n  CHANGE_PRODUCT_PRICE,\n  CHANGE_PRODUCT_SELECT,\n  CHANGE_MOD_NAME,\n  CHANGE_MOD_PRICE,\n  CHANGE_MOD_TYPE,\n  CHANGE_CAT_NAME,\n  CHANGE_CAT_TYPE,\n  SAVE_CATEGORY,\n  ADD_MODIFIER,\n  MAKE_MOD_FORM_VISIBLE,\n} from './constants';\nimport { da } from 'date-fns/esm/locale';\n\n// The initial state of the App\nexport const initialState = {\n  products: [],\n  isCreatePrdFormVisible: false,\n  isCreateModFormVisible: false,\n  isCreateCatFormVisible: false,\n  isCreateModBtnVisible: false,\n  productName: '',\n  productPrice: '',\n  selectedProduct: '',\n  modName: '',\n  modPrice: '',\n  catName: '',\n  catType: '',\n  productToAddMod: '',\n};\n\n/* eslint-disable default-case, no-param-reassign */\nconst loginReducer = (state = initialState, action) =>\n  produce(state, draft => {\n    switch (action.type) {\n\n      case CHANGE_PRODUCT_NAME:\n        draft.productName = action.name;\n        break;\n      case CHANGE_PRODUCT_PRICE:\n        draft.productPrice = action.price;\n        break;\n      case CHANGE_PRODUCT_SELECT:\n        draft.selectedProduct = action.select;\n        if(action.select === \"noProduct\") {\n          draft.isCreateModBtnVisible = false;\n          draft.isCreateCatFormVisible = false;\n        } else {\n          if(draft.isCreateCatFormVisible === false){\n            draft.isCreateModBtnVisible = true;\n          }\n        }\n        break\n\n      case CHANGE_MOD_NAME:\n        draft.modName = action.name;\n        break;\n      case CHANGE_MOD_PRICE:\n        draft.modPrice = action.price;\n        break;\n      case CHANGE_MOD_TYPE:\n        draft.modType = action.modType;\n        break;\n\n      case CHANGE_CAT_NAME:\n        draft.catName = action.name;\n        break;\n      case CHANGE_CAT_TYPE:\n        draft.catType = action.catType;\n        break;\n\n      case LOAD_PRODUCTS:\n        draft.products = action.products;\n        break;\n      case SAVE_PRODUCT:\n        break;\n      case CREATE_PRODUCT:\n        draft.products = draft.products.concat([action.product]);\n        draft.productName = '';\n        draft.productPrice = '';\n        draft.isCreatePrdFormVisible = false;\n        break;\n\n      case SAVE_CATEGORY:\n        break;\n\n      case CREATE_MODIFIER:\n        let p = draft.products;\n        const pIndex = p.findIndex(p => p.name = action.productName)\n        p[pIndex].modifiers = p[pIndex].modifiers.concat([action.modifier])\n        draft.products = p;\n        break;\n\n      case MAKE_FORM_VISIBLE:\n        switch (action.form) {\n          case \"createProductForm\":            \n            draft.isCreatePrdFormVisible = action.visibility;\n            break;\n          case \"createModifierForm\":\n            draft.isCreateModFormVisible = action.visibility;\n            draft.modName = \"\";\n            draft.modPrice = \"\";\n            draft.modType = \"\";\n            draft.isCreateModBtnVisible = !action.visibility;\n            break;\n          case \"createModifierBtn\":\n            draft.isCreateModBtnVisible = action.visibility;\n            break;\n          case \"createCatForm\":\n            draft.isCreateCatFormVisible = action.visibility;\n            break;\n        }\n        break;\n\n      case ADD_MODIFIER: \n        let productIndex = draft.products.findIndex(product => product._id === action.product._id);\n        draft.products[productIndex] = action.product;\n        draft.isCreateCatFormVisible = false;\n        draft.catName = '';\n        break;\n\n      case MAKE_MOD_FORM_VISIBLE: \n        draft.productToAddMod = action.productId;\n      break;\n    }\n  });\n\nexport default loginReducer;","/**\n * ProductPage selectors\n */\n\nimport { createSelector } from 'reselect';\nimport { initialState } from './reducer';\n\nconst selectProducts = state => state.products || initialState;\n\nconst makeSelectProducts = () =>\n  createSelector(\n    selectProducts,\n    productsState => productsState.products,\n  );\n\nconst makeSelectNewCategory = () =>\n  createSelector(\n    selectProducts,\n    productsState => ({\n      name: productsState.catName,\n      type: productsState.catType,\n    }),\n  );\n\nconst makeSelectSelectedProduct = () =>\n  createSelector(\n    selectProducts,\n    productsState => \n    productsState.products.find(\n      product => product._id === productsState.selectedProduct\n    ),\n  );\n\nconst makeSelectNewProduct = () =>\n  createSelector(\n    selectProducts,\n    productsState => {\n      return {\n        name: productsState.productName,\n        modifiers: [],\n        type: 0,\n        price: productsState.productPrice,\n      };\n    },\n  );\n\n\nconst makeSelectNewMod = () =>\n  createSelector(\n    selectProducts,\n    productsState => {\n      return {\n        name: productsState.modName,\n        price: productsState.modPrice,\n      };\n    },\n  );\n\nconst makeSelectFormVisibility = () =>\n  createSelector(\n    selectProducts,\n    productsState => {\n      return({\n        isVisibleCreateProd: productsState.isCreatePrdFormVisible,\n        isVisibleCreateMod: productsState.isCreateModFormVisible,\n        isVisibleCreateModBtn: productsState.isCreateModBtnVisible,\n        isVisibleCreateCat: productsState.isCreateCatFormVisible,\n      });\n    },\n  );\n\nexport { makeSelectProducts, makeSelectFormVisibility, makeSelectNewProduct, makeSelectNewMod, makeSelectNewCategory, makeSelectSelectedProduct };","import { getServerUrl } from './../../utils/serverURL';\nimport { call, put, select, takeLatest } from 'redux-saga/effects';\nimport { SAVE_PRODUCT, SAVE_CATEGORY } from './constants';\nimport { makeSelectNewProduct, makeSelectNewCategory, makeSelectSelectedProduct } from './selectors';\nimport { createProduct, addModifierToProduct } from './actions';\nimport request from './../../utils/request';\nimport produce from 'immer';\n\nexport function* sagaSaveProduct() {\n  // Select username from store\n  const product = yield select(makeSelectNewProduct());\n  const requestURL = `${getServerUrl()}/products`;\n\n  try {\n    const token = localStorage.getItem(\"PointOfSaleToken\")\n    const authResponse = yield call(request, requestURL, {\n      body: JSON.stringify(product),\n      headers: {'Content-Type': 'application/json', 'Authorization': `Bearer ${token}`},\n      method: 'POST'\n    });\n\n    yield put(createProduct(product)); \n    \n  } catch (err) {\n    console.log(\"err\")\n    console.log(err)\n  }\n}\n\nexport function* sagaSaveCategory() {\n// Select username from store\nconst category = yield select(makeSelectNewCategory());\nconst product = yield select(makeSelectSelectedProduct());\n\n\n\nconst requestURL = `${getServerUrl()}/products/${product._id}`;\ntry {\n\n  const token = localStorage.getItem(\"PointOfSaleToken\")\n  product.modifiers = product.modifiers.concat([category]);\n  const authResponse = yield call(request, requestURL, {\n    body: JSON.stringify(product),\n    headers: {'Content-Type': 'application/json', 'Authorization': `Bearer ${token}`},\n    method: 'PATCH'\n  });\n\n  console.log(\"saga\")\n  console.log(authResponse)\n\n  yield put(addModifierToProduct(authResponse)); \n  \n} catch (err) {\n  console.log(\"err\")\n  console.log(err)\n}\n}\n\n/**\n * Root saga manages watcher lifecycle\n */\nexport default function* sagaListener() {\n  yield takeLatest(SAVE_PRODUCT, sagaSaveProduct);\n  yield takeLatest(SAVE_CATEGORY, sagaSaveCategory);\n}","import React, {useEffect, memo} from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nimport { createStructuredSelector } from 'reselect';\nimport { useInjectReducer } from './../../utils/injectReducer';\nimport { useInjectSaga } from './../../utils/injectSaga';\nimport Navbar from '../../components/Navbar';\n\nimport { createModifier, saveProduct, loadProducts, makeFormVisible, changeProduct, changeMod, changeCategory, saveCategory } from './actions';\nimport { makeSelectProducts, makeSelectFormVisibility, makeSelectNewProduct, makeSelectNewMod, makeSelectNewCategory, makeSelectSelectedProduct } from './selectors';\nimport { getServerUrl } from './../../utils/serverURL';\nimport reducer from './reducer';\nimport saga from './saga';\n\nconst key = 'products';\n\nconst Product = ({name, modifier, makeFormVisible}) => {\n\n  const formatType = (type) => {\n    switch (type) {\n      case \"0\":\n        return \"Opcional\"\n      case \"1\":\n        return \"Obligatorio\"\n      case \"2\":\n        return \"Seleccion multiple\"\n      default:\n        break;\n    }\n  };\n\n  return(\n    <div className=\"card\" style={{width: '18rem', margin:'8px', display:'inline-block'}}>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{modifier.name}</h5>\n        <h6 className=\"card-subtitle mb-2 text-muted\">Tipo: {formatType(modifier.type)}</h6>\n        <h6 className=\"card-subtitle mb-2 text-muted\">Producto: {name}</h6>\n\n        {modifier.options.map(option => {\n          return(\n            <div className=\"btn btn-dark\" style={{width: \"100%\", margin:\"4px\"}}>{option.name}</div>\n          );\n        })}\n      \n        <div className=\"btn btn-primary\" style={{width:'100%', marginTop:'24px'}} onClick={() => makeFormVisible(\"createCatForm\", true)}>+</div>\n      </div>\n    </div>\n  )\n}\n\nconst ProductList = ({products, makeFormVisible, onChangePrdct}) => {\n  return(\n    <div class=\"input-group mb-3\" style={{marginTop:'8px', padding:'0 20px'}}>\n      <select class=\"custom-select\" onChange={(evt) => onChangePrdct(\"mod\", evt.target.value)} >\n        <option selected value=\"noProduct\">Lista de Productos</option>\n        {products.map(product => (<option value={product._id}>{product.name}</option>))}\n      </select>\n      <div class=\"input-group-append\">\n        <label class=\"input-group-text\" onClick={() => makeFormVisible(\"createProductForm\", true)}> Agregar </label>\n      </div>\n    </div>\n  );\n}\n\nconst CreateProduct = ({name, price, onChangePrdct, makeFormVisible, onSaveProduct}) => {\n  return(\n    <div class=\"card\" style={{width: \"320px\", textAlign:\"left\"}}>\n      <div className=\"close\" style={{position:\"absolute\", top:\"8px\", right:\"16px\", cursor:\"pointer\"}} onClick={() => makeFormVisible(\"createProductForm\", false)}>\n        <span aria-hidden=\"true\" >&times;</span>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Nombre del Producto</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Nombre del Producto\" value={name} onChange={(evt) => onChangePrdct(\"name\", evt.target.value)} />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Precio del producto</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Precio\" value={price} onChange={(evt) => onChangePrdct(\"price\", evt.target.value)} />\n        </div>\n        <div className=\"btn btn-dark\" style={{width:\"100%\"}} onClick={onSaveProduct}>Crear</div>\n      </div>\n    </div>\n  );\n}\n\nconst CreateModifier = ({makeFormVisible, onChangeMod, newMod}) => {\n  return(\n    <div class=\"card\" style={{width: \"320px\", textAlign:\"left\"}}>\n      <div className=\"close\" style={{position:\"absolute\", top:\"8px\", right:\"16px\", cursor:\"pointer\"}} onClick={() => makeFormVisible(\"createModifierForm\", false)}>\n        <span aria-hidden=\"true\" >&times;</span>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Nombre</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Nombre del Modificador\" value={newMod.name} onChange={(evt) => onChangeMod(\"name\", evt.target.value)} />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Precio</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Precio\" value={newMod.price} onChange={(evt) => onChangeMod(\"price\", evt.target.value)}/>\n        </div>\n        <div className=\"btn btn-dark\" style={{width:\"100%\"}}>Crear</div>\n      </div>\n    </div>\n  );\n};\n\nconst CreateModifierButton = ({makeFormVisible}) => {\n  return(\n    <div class=\"input-group\" style={{marginTop:'8px', padding:'0 20px'}}>\n      <div className=\"btn btn-dark\" style={{width:\"480px\"}} onClick={() => makeFormVisible(\"createCatForm\", true)}>\n        Crear Modificador\n      </div>\n    </div>\n  );\n};\n\n\nconst CreateCategory = ({makeFormVisible, newCat, onChangeCat, onSaveCategory}) => {\n  return(\n    <div class=\"card\" style={{width: \"320px\", textAlign:\"left\"}}>\n      <div className=\"close\" style={{position:\"absolute\", top:\"8px\", right:\"16px\", cursor:\"pointer\"}}  onClick={() => makeFormVisible(\"createCatForm\", false)}>\n        <span aria-hidden=\"true\" >&times;</span>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"form-group\">\n          <label>Nombre</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Nombre de la categoria\" value={newCat.name} onChange={(evt) => onChangeCat(\"name\", evt.target.value)} />\n        </div>\n        <div class=\"form-group\">\n          <label>Tipo</label>\n          <select class=\"custom-select\" onChange={(evt) => onChangeCat(\"type\", evt.target.value)}>\n            <option selected>Tipos de Modificador</option>\n            <option value=\"0\">Opcional</option>\n            <option value=\"1\">Obligatorio</option>\n            <option value=\"2\">Seleccion Multiple</option>\n          </select>\n        </div>\n        <div className=\"btn btn-dark\" style={{width:\"100%\"}} onClick={onSaveCategory}>Crear</div>\n      </div>\n    </div>\n  );\n}\n\n\n\nexport function ProductPage({\n  products,\n  formStatus,\n  newProduct,\n  newMod,\n  newCat,\n  selected,\n  onLoadProducts,\n  makeFormVisible,\n  onChangePrdct,\n  onChangeMod,\n  onChangeCat,\n  onSaveProduct,\n  onSaveCategory\n}) {\n\n  useInjectReducer({ key, reducer });\n  useInjectSaga({ key, saga });\n\n  useEffect(() => {\n\n    const requestURL = `${getServerUrl()}/products`;\n    try {\n      const token = localStorage.getItem(\"PointOfSaleToken\")\n\n      axios.get(requestURL, {\n        headers: {'Authorization': `Bearer ${token}`}\n      })\n      .then(({ data }) => {\n        console.log(data.data);\n        onLoadProducts(data.data);\n      });\n\n    } catch (err) {\n      console.log(\"err\")\n      console.log(err)\n    }\n\n  }, []);\n\n\n  return (\n    <div className=\"container-fluid\" style={{padding: '0px'}}>\n      <Navbar is_active='product' />\n      <div className=\"row justify-content-center\">\n        <div className=\"col-12 col-md-5\">\n          <h1>Productos</h1>\n        </div>\n        <div className=\"col-12 col-md-5\">\n          <ProductList products={products} makeFormVisible={makeFormVisible} onChangePrdct={onChangePrdct} />\n          {formStatus.isVisibleCreateModBtn ? <CreateModifierButton makeFormVisible={makeFormVisible} /> : null}\n        </div>\n      </div>\n      <div className=\"row justify-content-center\">\n        { formStatus.isVisibleCreateProd ? <CreateProduct name={newProduct.name} price={newProduct.price} onChangePrdct={onChangePrdct} makeFormVisible={makeFormVisible} onSaveProduct={onSaveProduct} /> : null }\n      </div>\n      <div className=\"row justify-content-center\">\n        { formStatus.isVisibleCreateMod ? <CreateModifier makeFormVisible={makeFormVisible} newMod={newMod} onChangeMod={onChangeMod}  /> : null }\n      </div>\n      <div className=\"row justify-content-center\">\n        { formStatus.isVisibleCreateCat ? <CreateCategory makeFormVisible={makeFormVisible} newCat={newCat} onChangeCat={onChangeCat} onSaveCategory={onSaveCategory} /> : null }\n      </div>\n\n      <div className=\"row\">\n        {products.map(product => \n          product.modifiers.map(modifier => {\n            return(\n              <Product name={product.name} modifier={modifier}  makeFormVisible={makeFormVisible}/>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n}\n\nProductPage.propTypes = {\n  products: PropTypes.array,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  products: makeSelectProducts(),\n  formStatus: makeSelectFormVisibility(),\n  newProduct: makeSelectNewProduct(),\n  newMod: makeSelectNewMod(),\n  newCat: makeSelectNewCategory(),\n  selected: makeSelectSelectedProduct(),\n});\n\nexport function mapDispatchToProps(dispatch) {\n  return {\n    onLoadProducts: (products) => dispatch(loadProducts(products)),\n    makeFormVisible: (form, visibility) => dispatch(makeFormVisible(form, visibility)),\n    onChangePrdct: (property, value) => dispatch(changeProduct(property, value)),\n    onChangeMod: (property, value) => dispatch(changeMod(property, value)),\n    onChangeCat: (property, value) => dispatch(changeCategory(property, value)),\n    onSaveProduct: () => dispatch(saveProduct()),\n    onSaveCategory: () => dispatch(saveCategory()),\n  };\n}\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n);\n\n\nexport default compose(\n  withConnect,\n  memo,\n)(ProductPage);\n","/**\n * Validate the shape of redux store\n */\nexport default function checkStore(store) {\n  return true;\n}","const getServerUrl = () => {\n  return \"https://e7c274ef.ngrok.io\";\n}\n\nexport { getServerUrl };","import invariant from 'invariant';\nimport { isEmpty, isFunction, isString } from 'lodash';\n\nimport checkStore from './checkStore';\nimport createReducer from './../reducers';\n\nexport function injectReducerFactory(store, isValid) {\n  return function injectReducer(key, reducer) {\n    if (!isValid) checkStore(store);\n\n    invariant(\n      isString(key) && !isEmpty(key) && isFunction(reducer),\n      '(src/utils...) injectReducer: Expected `reducer` to be a reducer function',\n    );\n\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n    if (\n      Reflect.has(store.injectedReducers, key) &&\n      store.injectedReducers[key] === reducer\n    )\n      return;\n\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\n    store.replaceReducer(createReducer(store.injectedReducers));\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectReducer: injectReducerFactory(store, true),\n  };\n}","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ReactReduxContext } from 'react-redux';\n\nimport getInjectors from './reducerInjectors';\n\n/**\n * Dynamically injects a reducer\n *\n * @param {string} key A key of the reducer\n * @param {function} reducer A reducer that will be injected\n *\n */\nexport default ({ key, reducer }) => WrappedComponent => {\n  class ReducerInjector extends React.Component {\n    static WrappedComponent = WrappedComponent;\n\n    static contextType = ReactReduxContext;\n\n    static displayName = `withReducer(${WrappedComponent.displayName ||\n      WrappedComponent.name ||\n      'Component'})`;\n\n    constructor(props, context) {\n      super(props, context);\n\n      getInjectors(context.store).injectReducer(key, reducer);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\n};\n\nconst useInjectReducer = ({ key, reducer }) => {\n  const context = React.useContext(ReactReduxContext);\n  React.useEffect(() => {\n    getInjectors(context.store).injectReducer(key, reducer);\n  }, []);\n};\n\nexport { useInjectReducer };","import React from 'react'\nimport { Redirect } from 'react-router';\nimport { Link } from \"react-router-dom\";\n\n\nclass Navbar extends React.Component {\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      is_loggedIn: true,\n    }\n  }\n  \n\n  render(){\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        {this.state.is_loggedIn ? null : <Redirect to=\"/PS/login\" /> }\n        <a className=\"navbar-brand\" href=\"#\">PS</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className={(this.props.is_active === 'dashboard') ? 'nav-item active' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/PS/dashboard\">Dashboard</a>\n            </li>\n            <li className={(this.props.is_active === 'employees') ? 'nav-item active' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/PS/employees\">Employees</a>\n            </li>\n            <li className={(this.props.is_active === 'product') ? 'nav-item active' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/PS/ultimate\">Products</a>\n            </li>\n            <li className={(this.props.is_active === 'analytics') ? 'nav-item active' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/PS/analytics\">Analytics</a>\n            </li>\n            <li className={(this.props.is_active === 'flow') ? 'nav-item active' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/PS/flow\">Flujo</a>\n            </li>\n            <li className={(this.props.is_active === 'cash') ? 'nav-item active' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/PS/cash\">Caja</a>\n            </li>\n          </ul>\n          <span className=\"navbar-text\" style={{cursor: \"pointer\"}} onClick={() => {\n            localStorage.removeItem(\"PointOfSaleToken\");\n           this.setState({is_loggedIn: false});\n          }}>\n            Cerrar Sesión\n          </span>\n        </div>\n      </nav>\n    )\n  }\n\n}\n\nexport default Navbar;\n\n","/**\n * Parses the JSON returned by a network request\n *\n * @param  {object} response A response from a network request\n *\n * @return {object}          The parsed JSON from the request\n */\nfunction parseJSON(response) {\n  if (response.status === 204 || response.status === 205) {\n    return null;\n  }\n  return response.json();\n}\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n *\n * @return {object}           The response data\n */\nexport default function request(url, options) {\n  return fetch(url, options)\n    .then(checkStatus)\n    .then(parseJSON);\n}","export const RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';\nexport const DAEMON = '@@saga-injector/daemon';\nexport const ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';","import invariant from 'invariant';\nimport { isEmpty, isFunction, isString, conformsTo } from 'lodash';\n\nimport checkStore from './checkStore';\nimport { DAEMON, ONCE_TILL_UNMOUNT, RESTART_ON_REMOUNT } from './constants';\n\nconst allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\n\nconst checkKey = key =>\n  invariant(\n    isString(key) && !isEmpty(key),\n    '(app/utils...) injectSaga: Expected `key` to be a non empty string',\n  );\n\nconst checkDescriptor = descriptor => {\n  const shape = {\n    saga: isFunction,\n    mode: mode => isString(mode) && allowedModes.includes(mode),\n  };\n  invariant(\n    conformsTo(descriptor, shape),\n    '(src/utils...) injectSaga: Expected a valid saga descriptor',\n  );\n};\n\nexport function injectSagaFactory(store, isValid) {\n  return function injectSaga(key, descriptor = {}, args) {\n    if (!isValid) checkStore(store);\n\n    const newDescriptor = {\n      ...descriptor,\n      mode: descriptor.mode || DAEMON,\n    };\n    const { saga, mode } = newDescriptor;\n\n    checkKey(key);\n    //checkDescriptor(newDescriptor);\n\n    let hasSaga = Reflect.has(store.injectedSagas, key);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const oldDescriptor = store.injectedSagas[key];\n      // enable hot reloading of daemon and once-till-unmount sagas\n      if (hasSaga && oldDescriptor.saga !== saga) {\n        oldDescriptor.task.cancel();\n        hasSaga = false;\n      }\n    }\n\n    if (\n      !hasSaga ||\n      (hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT)\n    ) {\n      /* eslint-disable no-param-reassign */\n      store.injectedSagas[key] = {\n        ...newDescriptor,\n        task: store.runSaga(saga, args),\n      };\n      /* eslint-enable no-param-reassign */\n    }\n  };\n}\n\nexport function ejectSagaFactory(store, isValid) {\n  return function ejectSaga(key) {\n    if (!isValid) checkStore(store);\n\n    checkKey(key);\n\n    if (Reflect.has(store.injectedSagas, key)) {\n      const descriptor = store.injectedSagas[key];\n      if (descriptor.mode && descriptor.mode !== DAEMON) {\n        descriptor.task.cancel();\n        // Clean up in production; in development we need `descriptor.saga` for hot reloading\n        if (process.env.NODE_ENV === 'production') {\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\n          store.injectedSagas[key] = 'done'; // eslint-disable-line no-param-reassign\n        }\n      }\n    }\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectSaga: injectSagaFactory(store, true),\n    ejectSaga: ejectSagaFactory(store, true),\n  };\n}\n","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ReactReduxContext } from 'react-redux';\n\nimport getInjectors from './sagaInjectors';\n\n/**\n * Dynamically injects a saga, passes component's props as saga arguments\n *\n * @param {string} key A key of the saga\n * @param {function} saga A root saga that will be injected\n * @param {string} [mode] By default (constants.DAEMON) the saga will be started\n * on component mount and never canceled or started again. Another two options:\n *   - constants.RESTART_ON_REMOUNT — the saga will be started on component mount and\n *   cancelled with `task.cancel()` on component unmount for improved performance,\n *   - constants.ONCE_TILL_UNMOUNT — behaves like 'RESTART_ON_REMOUNT' but never runs it again.\n *\n */\nexport default ({ key, saga, mode }) => WrappedComponent => {\n  class InjectSaga extends React.Component {\n    static WrappedComponent = WrappedComponent;\n\n    static contextType = ReactReduxContext;\n\n    static displayName = `withSaga(${WrappedComponent.displayName ||\n      WrappedComponent.name ||\n      'Component'})`;\n\n    constructor(props, context) {\n      super(props, context);\n\n      this.injectors = getInjectors(context.store);\n\n      this.injectors.injectSaga(key, { saga, mode }, this.props);\n    }\n\n    componentWillUnmount() {\n      this.injectors.ejectSaga(key);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return hoistNonReactStatics(InjectSaga, WrappedComponent);\n};\n\nconst useInjectSaga = ({ key, saga, mode }) => {\n  const context = React.useContext(ReactReduxContext);\n  React.useEffect(() => {\n    const injectors = getInjectors(context.store);\n    injectors.injectSaga(key, { saga, mode });\n\n    return () => {\n      injectors.ejectSaga(key);\n    };\n  }, []);\n};\n\nexport { useInjectSaga };"],"sourceRoot":""}